// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OfficeReestr.OfficeReestrModel;

#nullable disable

namespace OfficeReestr.Migrations
{
    [DbContext(typeof(CompReestrDbContext))]
    [Migration("20240210104811_MyFirstMigration")]
    partial class MyFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Component", b =>
                {
                    b.Property<int>("ComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("component_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ComponentId"));

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("integer")
                        .HasColumnName("equipment_id");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("name");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("serial_number");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type");

                    b.HasKey("ComponentId")
                        .HasName("components_pkey");

                    b.HasIndex("EquipmentId");

                    b.ToTable("components", (string)null);
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateOnly?>("DateOfTermination")
                        .HasColumnType("date")
                        .HasColumnName("date_of_termination");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("first_name");

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hire_date");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("last_name");

                    b.Property<string>("Position")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("position");

                    b.HasKey("EmployeeId")
                        .HasName("employees_pkey");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("equipment_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("Ipadres")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("ipadres");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("name");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("serial_number");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type");

                    b.HasKey("EquipmentId")
                        .HasName("equipment_pkey");

                    b.ToTable("equipment", (string)null);
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Movement", b =>
                {
                    b.Property<int>("MovementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("movement_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MovementId"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("integer")
                        .HasColumnName("equipment_id");

                    b.Property<DateOnly?>("MovementDate")
                        .HasColumnType("date")
                        .HasColumnName("movement_date");

                    b.Property<int?>("SourceRoomId")
                        .HasColumnType("integer")
                        .HasColumnName("source_room_id");

                    b.Property<int?>("TargetRoomId")
                        .HasColumnType("integer")
                        .HasColumnName("target_room_id");

                    b.HasKey("MovementId")
                        .HasName("movements_pkey");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("SourceRoomId");

                    b.HasIndex("TargetRoomId");

                    b.ToTable("movements", (string)null);
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId")
                        .HasName("roles_pkey");

                    b.HasIndex(new[] { "RoleName" }, "roles_role_name_key")
                        .IsUnique();

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("room_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomId"));

                    b.Property<int?>("RoomNumber")
                        .HasColumnType("integer")
                        .HasColumnName("room_number");

                    b.HasKey("RoomId")
                        .HasName("rooms_pkey");

                    b.ToTable("rooms", (string)null);
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("users_pkey");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Username" }, "users_username_key")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Component", b =>
                {
                    b.HasOne("OfficeReestr.OfficeReestrModel.Equipment", "Equipment")
                        .WithMany("Components")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("components_equipment_id_fkey");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Movement", b =>
                {
                    b.HasOne("OfficeReestr.OfficeReestrModel.Employee", "Employee")
                        .WithMany("Movements")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("movements_employee_id_fkey");

                    b.HasOne("OfficeReestr.OfficeReestrModel.Equipment", "Equipment")
                        .WithMany("Movements")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("movements_equipment_id_fkey");

                    b.HasOne("OfficeReestr.OfficeReestrModel.Room", "SourceRoom")
                        .WithMany("MovementSourceRooms")
                        .HasForeignKey("SourceRoomId")
                        .HasConstraintName("movements_source_room_id_fkey");

                    b.HasOne("OfficeReestr.OfficeReestrModel.Room", "TargetRoom")
                        .WithMany("MovementTargetRooms")
                        .HasForeignKey("TargetRoomId")
                        .HasConstraintName("movements_target_room_id_fkey");

                    b.Navigation("Employee");

                    b.Navigation("Equipment");

                    b.Navigation("SourceRoom");

                    b.Navigation("TargetRoom");
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.User", b =>
                {
                    b.HasOne("OfficeReestr.OfficeReestrModel.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("users_role_id_fkey");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Employee", b =>
                {
                    b.Navigation("Movements");
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Equipment", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("Movements");
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("OfficeReestr.OfficeReestrModel.Room", b =>
                {
                    b.Navigation("MovementSourceRooms");

                    b.Navigation("MovementTargetRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
